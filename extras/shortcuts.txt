													                 .___      _________                                
													  ________ __  __| _/____ /   _____/ ______________  __ ___________ 
													 /  ___/  |  \/ __ |/  _ \\_____  \_/ __ \_  __ \  \/ // __ \_  __ \
													 \___ \|  |  / /_/ (  <_> )        \  ___/|  | \/\   /\  ___/|  | \/
													/____  >____/\____ |\____/_______  /\___  >__|    \_/  \___  >__|   
													     \/           \/             \/     \/                 \/      

Recording stubs-
Recording stubs can be easier. For example, you can create a bin folder in your home directory and add it to your path.
In that folder, you can create a shell script that will launch the recording server (or servers) for you. Here is an example,

------------------------------------------------------------------------------script----------------------------------------------------------------------------------------------->
#!/bin/bash

	osascript -e 'tell app "Terminal"
		do script "echo LISTENING FOR SERVICE-NAME-1"
	    do script "java -jar wiremock-standalone-2.20.0.jar --proxy-all http://example.com --record-mappings --port 4400 --root-dir /Users/<user>/Desktop/HTTPtraffic/service-name-1"
	end tell'

	osascript -e 'tell app "Terminal"
		do script "echo LISTENING FOR SERVICE-NAME-2"
	    do script "java -jar wiremock-standalone-2.20.0.jar --proxy-all http://example.com --record-mappings --port 5400 --root-dir /Users/<user>/Desktop/HTTPtraffic/service-name-2"
	end tell'

	osascript -e 'tell app "Terminal"
		do script "echo LISTENING FOR SERVICE-NAME-3"
	    do script "java -jar wiremock-standalone-2.20.0.jar --proxy-all http://example.com --record-mappings --port 6400 --root-dir /Users/<user>/Desktop/HTTPtraffic/service-name-3"
	end tell'
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->

This will launch three seperate terminal windows, each window running a seperate wiremock instance. This is an example, I imagine 
you are well versed with shell scripting so maybe I can steal some ideas from you later. One of the main reasons I bring this method
up is because Ive had situations where I didnt know if a particular service was being hit or not, I only had access to the code I was
testing. So I would grab a handful of service urls that I imagined were being hit and started a server for them. The recordings confirmed
my suspicion. 


Running the server-
In the same fashion, you can create a script that will start your server for you. Here is an example script.

----------------------------------------script--------------------------------------->
#!/bin/zsh

wireMockStandaloneJar="/Users/<user>/Desktop/sudoServer/wiremock-standalone-2.20.0.jar"
java -jar "$wireMockStandaloneJar" --port 2000
------------------------------------------------------------------------------------->

This script will start a wiremock instance in whatever directory you are currently in 
(assuming you are executing out of that new bin directory), this means a __files and a 
mappings directory will be created if they dont already exist and that directory will 
become the root of the server. You can also create an alias in your bash_profile and 
bypass this method, here is an example.

-----------------------------------------------alias-------------------------------------------------------->
alias startSudoServer="java -jar /Users/docean/Desktop/sudoServer/wiremock-standalone-2.20.0.jar --port 2000"
------------------------------------------------------------------------------------------------------------>

The alias method will of course access the wiremock jar that is in the root of the sudoServer
folder and use the stubs that already exist. 









